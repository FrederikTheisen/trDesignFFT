myspace = {'colors': [],'resis':[]}
cmd.select("res","enabled and name N and not hetatm", state = 1)
cmd.iterate("res", 'colors.append(color)', space=myspace)
cmd.iterate("res", 'resis.append(resi)', space=myspace)
seq = cmd.get_fastastr('enabled and not hetatm', state = 1)
idx = seq.index('\n')
seq = seq[idx+1:].strip().replace('\n','').replace('\r','').strip().replace('\n','').replace('\n','')
colors = myspace['colors']
resis = myspace['resis']
rtype = ''
mpos = ''
mlen = 0
i = 0
iterated = []

for c in colors:
  curr = resis[i]
  i += 1
  if curr in iterated: continue
  iterated.append(curr)
  mlen += 1
  if c == 3: #green
    rtype = rtype + 'g'
    mpos = mpos + '1'
  elif c == 4: #red
    rtype = rtype + 'r'
    mpos = mpos + '1'
  elif c == 2: #blue
    rtype = rtype + '-'
    mpos = mpos + '1'
  elif c == 8: #magenta
    rtype = rtype + 'm'
    mpos = mpos + '1'
  elif c == 6:
    rtype = rtype + 'y'
    mpos = mpos + '9'
  elif c == 0: #white
    rtype = rtype + '-'
    mpos = mpos + '-'
    mlen -= 1
  elif c == 49:
    rtype = rtype + 'c'
    mpos = mpos + '1'
  elif c == 5: #cyan/separate motif group, highly restrained
    rtype = rtype + 'm'
    mpos = mpos + '9'
  else:
    print(c)
    exit()
print(i)

print("Three first values must be equal")
print(len(seq.replace('\n','')),len(rtype),len(mpos), len(colors))
print("mlen: " + str(mlen))

print("sequence_constraint = \'\'\'" + seq.replace('\n','') + "\'\'\'.replace('\\n','')")
print("motif_constraint = \'\'\'" + rtype + "\'\'\'.replace('\\n','')")
print("motif_position =   \'\'\'" + mpos + "\'\'\'.replace('\\n','')")
